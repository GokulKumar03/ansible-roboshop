- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: disable old nodejs and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y; dnf module enable nodejs:18 -y
  
  - name: Install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: Create Roboshop user
    ansible.builtin.user:
      name: roboshop

  # if app directort exist, we will delete and then create again.
  - name: Recursively removing app Directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Create app Directory
    ansible.builtin.file:
      path: /app
      state: directory   # if not mentioned, it will consider as a file

  - name: Download Catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract catalogue application
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: installing dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: Daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true
      
  # Lets start after data is loaded.

  - name: Copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

# in sever, to check count
#  mongo --host mongodb.gokul.shop --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'

  - name: get the catagories count
    ansible.builtin.command: mongo --host mongodb.gokul.shop --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  # - name: print the count
  #   ansible.builtin.debug:
  #     msg: "product count: {{product_count}}"

#output
# TASK [print the count] *************************************************************************************************************************************
#ok: [catalogue.gokul.shop] => {
#    "msg": "product count: {'changed': True, 'stdout': '11', 'stderr': '', 'rc': 0, 'cmd': ['mongo', '--host', 'mongodb.gokul.shop', '--quiet', '--eval', 'db = db.getSiblingDB(\"catalogue\"); db.products.count()'], 'start': '2025-06-28 00:49:40.739736', 'end': '2025-06-28 00:49:40.825329', 'delta': '0:00:00.085593', 'msg': '', 'stdout_lines': ['11'], 'stderr_lines': [], 'failed': False}"
#}

  - name: load cataloguedata
    ansible.builtin.command: mongo --host mongodb.gokul.shop < /app/schema/catalogue.js
    when: product_count == "0"

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes
    